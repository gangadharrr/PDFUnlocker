name: Docker CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  BACKEND_IMAGE: pdf-unlocker-backend
  FRONTEND_IMAGE: pdf-unlocker-frontend

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.BACKEND_IMAGE }}
          ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.FRONTEND_IMAGE }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.BACKEND_IMAGE }}:latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.FRONTEND_IMAGE }}:latest
        labels: ${{ steps.meta.outputs.labels }}

    - name: Update docker-compose.yml for GitHub Container Registry
      run: |
        sed -i "s|gangadharrr/pdf-unlocker-backend|${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.BACKEND_IMAGE }}|g" docker-compose.yml
        sed -i "s|gangadharrr/pdf-unlocker-frontend|${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ env.FRONTEND_IMAGE }}|g" docker-compose.yml

    - name: Start application
      run: |
        docker-compose up -d
        echo "Waiting for services to start..."
        sleep 30

    - name: Check running containers
      run: docker ps

    - name: Check backend health
      run: |
        curl -f http://localhost:8000/health || exit 1
        echo "Backend is healthy"

    - name: Check frontend accessibility
      run: |
        curl -f http://localhost:80 || exit 1
        echo "Frontend is accessible"

    - name: Create GitHub deployment
      if: success() && github.event_name == 'push'
      uses: actions/github-script@v7
      with:
        script: |
          const deployment = await github.rest.repos.createDeployment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.sha,
            environment: 'production',
            auto_merge: false,
            required_contexts: []
          });
          
          await github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: deployment.data.id,
            state: 'success',
            environment_url: 'http://localhost',
            log_url: `https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`
          });

    - name: Application URLs
      run: |
        echo "Application is running!"
        echo "Frontend URL: http://localhost"
        echo "Backend URL: http://localhost:8000"
